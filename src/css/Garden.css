.main-garden {
  position: relative;
  height: 100vh;
  overflow-x: auto;
  min-width: fit-content;
  width: 100%;
}

.div1-garden {
  position: relative;
  height: 100vh;
  min-width: 100vw;
  width: max-content;
}

.flower-image {
  cursor: pointer;
}

.error-message {
  color: red;
  font-size: 14px;
  margin-bottom: 8px;
  text-align: center;
}


.div1-image {
  width: auto;
  min-width: 100vw;
  height: 100%;
  position: absolute; /* Positioned relative to .div1-garden */
  top: 0;
  left: 0;
  z-index: 1; /* Grass image is behind the flowers */
  opacity: 0.9;
}

.flower {
  position: absolute; /* This positions the flowers on top of the grass */
  z-index: 2; /* Ensures flowers are above the grass */
  cursor: pointer;
  
  /* or use box-shadow: */
}


/* For more pronounced shadow */
.flower:hover {
  filter: drop-shadow(0 6px 12px rgba(0, 0, 0, 0.3));
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.473); /* Dark semi-transparent background */
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9; /* Ensure it's below the input */
  border: none;
}

.input-container {
  position: absolute; /* Use absolute positioning to position relative to the main garden */
  top: 50%; /* Move to the vertical center */
  left: 50%; /* Move to the horizontal center */
  transform: translate(-50%, -50%); /* Adjust to center exactly */
  z-index: 10;
  display: flex;
  flex-direction: column;
  row-gap: 50px;
  align-items: center;
  justify-content: center;
  height: 40%;
  width: 50%;
  background-color: rgb(255, 157, 10);
  padding-left: 10px;
  padding-right: 10px;
  padding-bottom: 30px;
  padding-top: 30px;
  border-radius: 20px;
}
.submit{
  height: 50px;
  width: 25%;
  background: none;
  border: none;
  cursor: pointer;
  font-weight: bold;
  font-family: "Pixelify Sans", sans-serif;
  font-size: 20px;
}

.submit-img {
  width: 100%; /* Ensures it scales with the button */
  height: auto; /* Maintain aspect ratio */
  object-fit: contain;
  pointer-events: none;
}

.close{
  background: none;
  border: none;
  height: 50px;
  width: 25%;
  cursor: pointer;
  font-weight: bold;
  font-family: "Pixelify Sans", sans-serif;
  font-size: 20px;
}

.close-img {
  width: 100%; /* Ensures it scales with the button */
  height: auto; /* Maintain aspect ratio */
  object-fit: contain;
  pointer-events: none;
}


.advicebuttons{
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap:10px;
  justify-content: center;
}

/* Style for the input field */
.input {
  font-size: 16px;
  width: 90%;
  height: 200px; /* Set a fixed height for the input */
  vertical-align: top;
  white-space: normal; /* Allow text to wrap */
  overflow-y: auto; /* Enable vertical scrolling */
  word-wrap: break-word; /* Ensure long words break properly */
  resize: none; /* Prevent resizing the textarea */
  border-radius: 20px;
  padding: 13px;
}


.plantaseed-button {
  width: 70vw; /* Make it responsive to the viewport width */
  max-width: 500px; /* Set a max width */
  height: auto;
  background: none;
  border: none;
  position: absolute;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  cursor: pointer;
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
}

.plantaseed-img {
  width: 80%; /* Ensures it scales with the button */
  height: auto; /* Maintain aspect ratio */
  max-height: 1230px; /* Optional: Adjust this to limit height */
  object-fit: contain;
  pointer-events: none;
}

.plantaseed-button.hidden {
  opacity: 0.3; /* Reduce opacity when input is open */
  pointer-events: none; /* Prevent clicking when faded */
}


.realadvice {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: white;
  width: 400px;
  max-width: 90vw;
  max-height: 60vh;
  display: flex;
  flex-direction: column;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.2);
  z-index: 1000;
}

.advice-content {
  padding: 20px;
  overflow-y: auto;
  flex-grow: 1;
  overflow-x: hidden;
}

.bottom-advice {
  display: flex;
  justify-content: space-between;
  padding: 15px 20px;
  background: #f5f5f5;
  border-top: 1px solid #ddd;
  border-radius: 0 0 10px 10px;
  flex-shrink: 0;
  font-family: "Pixelify Sans", sans-serif;
}

.waterbutton{
  font-family: "Pixelify Sans", sans-serif;

}

.bottom-advice div {
  padding: 8px 15px;
  border-radius: 5px;
  cursor: pointer;
  transition: background 0.2s;
}
.advice-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.3);
  z-index: 999;
}

.bottom-advice div:hover {
  background: #e0e0e0;
}

.close-button {
  color: #666;
  font-weight: bold;
  font-family: "Pixelify Sans", sans-serif;
}


.author{
 padding-left: 20px;
 font-weight: bold;
 font-family: "Pixelify Sans", sans-serif;

}

.top-part{
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding-top: 10px;
  padding-bottom: 10p
}

.water-count{
  padding-right: 20px;
  font-weight: bold;
  font-family: "Pixelify Sans", sans-serif;
}


/* Duck Animation */
.duck-container {
  position: fixed;
  top: 5%;
  left: 10%;
  transform: translateX(-50%);
  z-index: 1000;
  cursor: pointer;
}

.duck {
  transform: scale(3); /* Double the size */
  transform-origin: center center;
  width: 64px;
  height: 64px;
  background-image: url('../Images/Lay.png');
  animation: duck-walk 1s steps(6) infinite;
  z-index: 100;
}

@keyframes duck-walk {
  from { background-position: 0 0; }
  to { background-position: -768px 0; } /* 12 frames * 64px */
}

.divforduck{
  position: relative;
}

.speech-bubble {
  position: absolute;
  top: 50%;
  left: 50px; /* Position to the right of the duck */
  transform: translateY(-50%); /* Center vertically with the duck */
  background: white;
  color: black;
  padding: 10px 15px;
  border-radius: 10px;
  font-size: 14px;
  font-family: "Pixelify Sans", sans-serif;
  text-align: center;
  white-space: nowrap;
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
  z-index: 1100;
}

/* Triangle (Speech Bubble Tail) */
.speech-bubble::after {
  content: "";
  position: absolute;
  top: 50%; /* Position the tail in the middle of the bubble */
  left: -10px; /* Position the triangle to the left of the bubble */
  transform: translateY(-50%); /* Center the triangle vertically */
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-bottom: 10px solid white; /* Tail pointing to the duck */
}

.problem_statement_main {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between; /* Ensures space is distributed properly */
  height: 40%;
  width: 50%;
  background-color: rgb(135, 126, 187);
  padding: 30px 10px;
  border-radius: 20px;
  color: black;
  border: 5px solid black;
  z-index: 100000;
}

.problem_statement {
  flex-grow: 1; /* Allows it to take up available space */
  overflow-y: auto; /* Enables vertical scrolling */
  width: 90%;
  max-height: 100px;
  color: black;
  max-height: calc(100% - 50px); /* Adjust based on button height */
}
.problem_statement_close {
  background: none;
  border: none;
  width: 30%;
  cursor: pointer;
  margin-top: auto; 
}


.ptitle{
  font-weight: bold;
  color: black;
}

.main-div-p{
  display: flex;
  flex-direction: column;
  row-gap: 30px;
}

.main-div-g{
  display: flex;
  flex-direction: column;
  row-gap: 10px;
}

/* Mobile-first responsive design for Garden component */
@media screen and (max-width: 768px) {
  .main-garden {
    height: 100dvh; /* Dynamic viewport height for mobile */
    overflow: hidden; /* Prevent scrolling issues */
  }

  .div1-garden {
    min-width: 100vw;
    height: 100dvh;
  }

  .overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.253); /* Dark semi-transparent background */
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9; /* Ensure it's below the input */
    border: none;
  }

  .div1-image {
    object-fit: cover; /* Ensure grass image covers full screen */
    width: 100%;
    height: 100%;
  }

  .flower {
    transition: transform 0.2s ease; /* Add subtle interaction feedback */
  }

  .flower:active {
    transform: scale(1.1); /* Slight enlarge on tap */
  }

  .plantaseed-button {
    width: 90%; /* More mobile-friendly width */
    max-width: 300px;
    bottom: 10px; /* Closer to bottom */
    z-index: 100;
  }

  .plantaseed-img {
    width: 100%; /* Full width of button */
  }

  .input-container {
    width: 100%; /* More mobile-friendly width */
    height: 100%; /* Reduced height */
    padding: 15px;
  }

  .input {
    width: 84%;/* Full width */
    height: 150px; /* Reduced height */
    font-size: 14px; /* Smaller font */
  }

  .realadvice {
    width: 90vw; /* Responsive width */
    max-height: 70vh; /* More space on mobile */
  }

  .duck-container {
    top: 3%; /* Slightly higher */
    left: 8%; /* More to the left */
    scale: 0.7;
    z-index: 1000;
  }

  .speech-bubble {
    font-size: 12px; /* Smaller text */
    padding: 8px 12px;
    left: 40px; /* Adjust positioning */
  }

  .problem_statement_main {
    width: 100%; /* Full width with padding */
    height: 80%; /* More height */
    opacity: 1;
    overflow-y: auto;
    padding-top: 100px;
    padding-bottom: 150px;
    z-index: 10000;
  }

  .problem_statement {
    max-height: none; /* Allow full scrolling */
    overflow-y: auto;
  }

  .advicebuttons {
    flex-direction: row; /* Horizontal button layout */
    gap: 10px; /* Space between buttons */
  }

  .submit, .close {
    width: 45%; /* Equal width buttons */
  }
}

/* Touch-friendly adjustments */
@media (pointer: coarse) {
  .waterbutton, 
  .plantaseed-button, 
  .problem_statement_close {
    min-height: 44px; /* Minimum tap target size */
    min-width: 44px;
  }
}

/* High contrast for better mobile readability */
.ptitle {
  color: #000000;
  font-size: 0.9rem;
}

.ptext {
  color: #000000;
  font-size: 0.8rem;
  line-height: 1.4;
}